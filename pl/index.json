[{"authors":["admin"],"categories":null,"content":"Cześć! Jestem doktorantem astronomii w Instytucie Astronomicznym Uniwersytetu Wrocławskiego. Interesuję się modelowaniem atmosfer gwiazdowych oraz zastosowaniami technik uczenia maszynowego w astronomii.\nOdwiedzając tę stronę możesz być zainteresowany znalezieniem infromacji o programie HANDY służącym m.in. do normowania widm gwiazdowych lub szukasz materiałów dydaktycznych.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"pl","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://www.rozanskit.com/pl/author/Tomasz-Rozanski/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/pl/author/Tomasz-Rozanski/","section":"authors","summary":"Cześć! Jestem doktorantem astronomii w Instytucie Astronomicznym Uniwersytetu Wrocławskiego. Interesuję się modelowaniem atmosfer gwiazdowych oraz zastosowaniami technik uczenia maszynowego w astronomii.\nOdwiedzając tę stronę możesz być zainteresowany znalezieniem infromacji o programie HANDY służącym m.","tags":null,"title":"Tomasz Różański","type":"authors"},{"authors":[],"categories":[],"content":"Osobliowść gwiazd chemicznie osobliwych (ang. chemically peculiar, CP) wiąże się z ich istotnie innym od słonecznego składem chemicznym i to nie przez zwykłe przeskalowanie, ale selektywnie względem różnych pierwiastków. Na przykład gwiazdy typu HgMn mają w swoich atmosferach aż do miliona razy więcej rtęci i tysiąca razy więcej manganu niż Słońce. Wśród pierwiastków, których obfitości mogą być bardzo różne od typowych są m.in. hel, krzem, stront, chrom, europ i wiele innych. Można się zastanawiać co jest źródłem wzbogacenia tych gwiazd w tak osobliwe pierwiastki chemiczne i okazuje się, że nie są to ani reakcje chemiczne, ani opadająca na gwiazdy materia z ich otoczenia, ale proces dyfuzji napędzany przez promieniowanie, które selektywnie oddziałuje z atomami różnych pierwiastków w ich atmosferach. I tak atomy, które w niewielkim stopniu oddziałują z promieniowaniem toną, podczas gdy pozostałe są wynoszone w górne warstwy atmosfer i tam się gromadzą.1 Gwiazdy chemicznie osobliwe mają temperatury w zakresie od około 7000 K do 26000 K 2, przy czym dla porównania temperatura efektywna Słońca to 5777 K. Dolna granica temperatur związana jest z obecnością zewnętrznej warstwy konwekcyjnej w gwiazdach chłodniejszych, a górna, z obecnością silnego wiatru gwiazdowego w przypadku gwiazd gorących.\nWarunkiem koniecznym powstania chemicznych osobliwości jest dodatkowo powolna rotacja danej gwiazdy, ponieważ w gwiazdach szybko rotujących, występują dodatkowe procesy mieszania, które nie pozwalają na rozwinięcie się osobliwości. Z tego powodu tylko, częśc gwiazd w podanym zakresie temperatur jest chemicznie osobliwa. Jaka część gwiazd jest chemicznie osobliwa można zobaczyć na poniższym rysunku.3\n  Częstość występowania gwiazd CP. Rysunek pochodzi z publikacji [3].   Wśród gorących gwiazd chemicznie osobliwych wyróżniamy gwiazdy o osobliwych liniach helu - gwiazdy helowo słabe (ang. He-weak, He-w) i helowo silne (ang. He-strong, He-s). Pierwsze z nich mają temperatury w zakresie 13'000-18'000 K, drugie w przedziale 18'000-26'000 K.2 W gwiazdach typu He-s stosunek liczby atomów helu do wodoru jest w przedziale 0.3 do 10, w kolei w gwiazdach He-w 0.005-0.05 (w pierwotnej materii po Wielkim Wybuchu stosunek ten wynosił 0.08).\nNa granicy pomiędzy tymi dwoma typami gwiazd znajduje się niewielka podgrupa gwiazd He-w, gwiazdy $^3$He. Są to gwiazdy w zakresie temperatur 16'000-21'000K, w których izotopu $^4$He jest od 5 do 20 razy mniej niż w zwykładych gwiazdach typu B, lecz o wysokim stosunku izotopów $^3$He/$^4$He od 0.47 do 2.7 w znanych obiektach.4 Z powodu tak dużej obfitości lekkiego izotopu helu w widmie tych gwiazd linie tego pierwiastka posiadają wyraźnie dwie składowe (rysunek na początku posta, gdzie zobaczyć można linię neutralnego helu o długości fali 6678 Å w widmie gwiazdy HD 1853305). Znamy około 20 obiektów tego typu.\nBardzo podobne do gwiazd $^3$He omówionych powyżej są, palące hel w jądrze, gwiazdy typu $^3$He sdB. Ze zwględu na większe przyspieszenie grawitacyjne na ich powierzchni (10-100 razy większe niż w przypadku gwiazd ciągu głównego), w przypadku tych gwiazd anomalna obfitość helu-3 występuje w zakresie wyższych temperatur 26'000-30'000 K. Tutaj również źródłem wzbogacenia atmosfery z izotop $^3$He są procesy dyfuzji.\nWarto zwrócić uwagę na jeszcze jeden aspekt wzbogacenia atmosfer tych gwiazd w $^3$He. Proces ten nie polega na intuicyjnym \u0026ldquo;utonięciu\u0026rdquo; $^4$He i pozostaniu lżejszego izotopu w atmosferze, ponieważ w atmosferach tych gwiazd obserwujemy obfitości $^3$He do 100 razy większe niż wynikałoby z takiego prostego wyjaśnienia tego zjawiska. W atmosferach tych gwiazd $^3$He jest aktywnie wzbogacany przez oddziaływanie procesu dyfuzji z wiatrem gwiazdowym i polem magnetycznym.\nJak widać w gwiazdach $^3$He istotne znaczenie ma bardzo wiele procesów fizycznych. Dlatego wiele zagadnień dotyczących tych obiektów nie zostało jeszcze dostatecznie zrozumianych, m.in. stratyfikacja pierwiastków w ich atmosferach67, zmienność linii widmowych8 czy obecność słabych linii emisyjnych w widmach tych gwiazd9. Z całą pewnością te gwiazdy kryją przed nami jeszcze wiele niespodzianek!\n    Georges Michaud  (1970). Diffusion Processes in Peculiar A Stars. Astrophysical Journal.  Cytowanie  DOI   \u0026#x21a9;\u0026#xfe0e;\n   M. Netopil, E. Paunzen, H. M. Maitzen, P. North, S. Hubrig  (2008). Chemically peculiar stars and their temperature calibration. Astronomy \u0026amp; Astrophysics.  PDF  Cytowanie  DOI   \u0026#x21a9;\u0026#xfe0e;\n   Keith C Smith  (1996). Chemically peculiar hot stars. Astrophysics and Space Science.  Cytowanie   \u0026#x21a9;\u0026#xfe0e;\n   M.R. Hartoog, A.P. Cowley  (1979). The helium-3 stars. Astrophysical Journal.  Cytowanie  DOI   \u0026#x21a9;\u0026#xfe0e;\n   E. Niemczura, S. Vennes, T. Różański, A. Pigulski, K. Hełminiak, H. Lehmann  (2018). HD 185330 — chemically peculiar $^3$He star in the Kepler field. Contributions of the Astronomical Observatory Skalnate Pleso.  Cytowanie   \u0026#x21a9;\u0026#xfe0e;\n   D. Bohlender  (2005). $^3$He and $^4$He Abundance Stratification in the $^3$He and Related Stars. EAS Publications Series.  Cytowanie  DOI   \u0026#x21a9;\u0026#xfe0e;\n  \u0026#x21a9;\u0026#xfe0e;\n   D.A. Bohlender, J.B. Rice, P. Hechler  (2010). Doppler imaging of the helium-variable star a Centauri. Astronomy \u0026amp; Astrophysics.  Cytowanie  DOI   \u0026#x21a9;\u0026#xfe0e;\n   G.~M. Wahlgren, S. Hubrig  (2004). Emission lines in the optical spectrum of 3 Cen A. A\u0026amp;A.  Cytowanie  DOI   \u0026#x21a9;\u0026#xfe0e;\n   ","date":1599585079,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":1599585079,"objectID":"a84267ea8489dccc1747981c6cf77b02","permalink":"https://www.rozanskit.com/pl/post/gwiazdy_3He/","publishdate":"2020-09-08T19:11:19+02:00","relpermalink":"/pl/post/gwiazdy_3He/","section":"post","summary":"Osobliowść gwiazd chemicznie osobliwych (ang. chemically peculiar, CP) wiąże się z ich istotnie innym od słonecznego składem chemicznym i to nie przez zwykłe przeskalowanie, ale selektywnie względem różnych pierwiastków. Na przykład gwiazdy typu HgMn mają w swoich atmosferach aż do miliona razy więcej rtęci i tysiąca razy więcej manganu niż Słońce.","tags":[],"title":"Gwiazdy chemicznie osobliwe typu $^3$He","type":"post"},{"authors":["E. Niemczura","S. Vennes","T. Różański","A. Pigulski","K. Hełminiak","H. Lehmann"],"categories":[],"content":"","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":1599995542,"objectID":"3d27f43f83b8602901149c71d48ddfcb","permalink":"https://www.rozanskit.com/pl/publication/2018-niemczura/","publishdate":"2020-09-14T17:53:23.712273Z","relpermalink":"/pl/publication/2018-niemczura/","section":"publication","summary":"","tags":["\"stars: chemically peculiar\"","\"stars: atmospheres\"","\"stars: abundances\""],"title":"HD 185330 — chemically peculiar $^3$He star in the Kepler field","type":"publication"},{"authors":["Natalia L. Maza","Marı́a-Fernanda Nieva","Norbert Przybilla"],"categories":[],"content":"","date":1417392000,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":1600105565,"objectID":"77ab1b79991054030fc38cff8cdda639","permalink":"https://www.rozanskit.com/pl/publication/2014-maza/","publishdate":"2020-09-14T17:53:23.9896Z","relpermalink":"/pl/publication/2014-maza/","section":"publication","summary":"","tags":["\"stars: abundances\"","\"stars: atmospheres\"","\"stars: chemically peculiar\"","\"stars: early-type\"","\"stars: individual:\u0026amp;kappa;Cancri\"","\"Astrophysics - Solar and Stellar Astrophysics\""],"title":"A non-LTE spectral analysis of the $^3$He and $^4$He isotopes in the HgMn star kappa Cancri","type":"publication"},{"authors":["D.A. Bohlender","J.B. Rice","P. Hechler"],"categories":[],"content":"","date":1283299200,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":1600105748,"objectID":"69284237091831ebe345b9fc58a0b3f4","permalink":"https://www.rozanskit.com/pl/publication/2010-bohlender/","publishdate":"2020-09-14T17:53:24.133683Z","relpermalink":"/pl/publication/2010-bohlender/","section":"publication","summary":"","tags":["\"stars: abundances\"","\"stars: chemically peculiar\"","\"stars: magnetic field\"","\"stars: individual: a Cen\"","\"Astrophysics - Solar and Stellar Astrophysics\""],"title":"Doppler imaging of the helium-variable star a Centauri","type":"publication"},{"authors":["M. Netopil","E. Paunzen","H. M. Maitzen","P. North","S. Hubrig"],"categories":[],"content":"","date":1222819200,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":1599916378,"objectID":"9cca19dc2f63c8e6d548575b0a05f72d","permalink":"https://www.rozanskit.com/pl/publication/netopil-2008/","publishdate":"2020-09-14T17:53:23.352922Z","relpermalink":"/pl/publication/netopil-2008/","section":"publication","summary":"","tags":[],"title":"Chemically peculiar stars and their temperature calibration","type":"publication"},{"authors":["D. Bohlender"],"categories":[],"content":"","date":1104537600,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":1600105427,"objectID":"41bcac7524a0278a5c3868dc46ea7231","permalink":"https://www.rozanskit.com/pl/publication/2005-bohlender/","publishdate":"2020-09-14T17:53:23.849076Z","relpermalink":"/pl/publication/2005-bohlender/","section":"publication","summary":"","tags":[],"title":"$^3$He and $^4$He Abundance Stratification in the $^3$He and Related Stars","type":"publication"},{"authors":["G.~M. Wahlgren","S. Hubrig"],"categories":[],"content":"","date":1083369600,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":1600105841,"objectID":"df1d294a45ed8aff548c842bb4c3de96","permalink":"https://www.rozanskit.com/pl/publication/2004-wahlgren/","publishdate":"2020-09-14T17:53:24.266086Z","relpermalink":"/pl/publication/2004-wahlgren/","section":"publication","summary":"","tags":["\"line: identification\"","\"stars: abundances\"","\"stars: chemically peculiar\"","\"stars: emission\"","\"stars: individual: 3 Cen A\""],"title":"Emission lines in the optical spectrum of 3 Cen A","type":"publication"},{"authors":["Keith C Smith"],"categories":[],"content":"","date":820454400,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":1599918053,"objectID":"cccd790670e9a1bcc06eee379ba218a2","permalink":"https://www.rozanskit.com/pl/publication/smith-1996-chemically/","publishdate":"2020-09-14T17:53:23.474752Z","relpermalink":"/pl/publication/smith-1996-chemically/","section":"publication","summary":"","tags":[],"title":"Chemically peculiar hot stars","type":"publication"},{"authors":["M.R. Hartoog","A.P. Cowley"],"categories":[],"content":"","date":286675200,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":1599994992,"objectID":"1c3755a4a556d452745ef3a33644613b","permalink":"https://www.rozanskit.com/pl/publication/1979-hartoog/","publishdate":"2020-09-14T17:53:23.592592Z","relpermalink":"/pl/publication/1979-hartoog/","section":"publication","summary":"","tags":["\"A Stars\"","\"Abundance\"","\"Astronomical Spectroscopy\"","\"Helium Isotopes\"","\"Stellar Structure\"","\"B Stars\"","\"Hertzsprung-Russell Diagram\""],"title":"The helium-3 stars","type":"publication"},{"authors":["Georges Michaud"],"categories":[],"content":"","date":10368000,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":1599915896,"objectID":"d8b8408722e17a8c61fb18d9c17b3cf0","permalink":"https://www.rozanskit.com/pl/publication/1970-michaud/","publishdate":"2020-09-14T17:53:23.228518Z","relpermalink":"/pl/publication/1970-michaud/","section":"publication","summary":"","tags":[],"title":"Diffusion Processes in Peculiar A Stars","type":"publication"},{"authors":null,"categories":null,"content":"Gdzie poczytać o Pythonie?  https://wiki.python.org/moin/BeginnersGuide/NonProgrammers https://python.cs.southern.edu/pythonbook/pythonbook.pdf https://pl.wikibooks.org/wiki/Zanurkuj_w_Pythonie  A w praktyce najczęsciej będzie to: https://stackoverflow.com/questions/tagged/python-3.x\nInstalacja  https://docs.anaconda.com/anaconda/install/ https://www.anaconda.com/distribution/  Czym jest Jupyter Notebook?  http://perseba.github.io/blog/jupyter-wprowadzenie.html https://jupyter.readthedocs.io/en/latest/install.html  Czym jest Conda?  https://docs.conda.io/en/latest/  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":-62135596800,"objectID":"55f9fe19b2f83e1bc295ba90eb51af0a","permalink":"https://www.rozanskit.com/pl/teaching/jsp2019/introduction/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/pl/teaching/jsp2019/introduction/","section":"teaching","summary":"Gdzie poczytać o Pythonie?  https://wiki.python.org/moin/BeginnersGuide/NonProgrammers https://python.cs.southern.edu/pythonbook/pythonbook.pdf https://pl.wikibooks.org/wiki/Zanurkuj_w_Pythonie  A w praktyce najczęsciej będzie to: https://stackoverflow.com/questions/tagged/python-3.x\nInstalacja  https://docs.anaconda.com/anaconda/install/ https://www.anaconda.com/distribution/  Czym jest Jupyter Notebook?  http://perseba.github.io/blog/jupyter-wprowadzenie.html https://jupyter.readthedocs.io/en/latest/install.html  Czym jest Conda?","tags":null,"title":"Podstawowe informacje i instalacja Pythona","type":"teaching"},{"authors":null,"categories":null,"content":"Co to jest Rekurencja? Zacznijmy od żartu. Rekurencja (ang.recursion) występuje, gdy definicja typu czy funkcji odwołuje się sama do siebie. Przykładem rekurencyjnej definicji funkcji może być definicja ciągu Fibonacciego: $$ F_n = \\begin{cases} 1,\u0026amp; \\text{if } x = 0\\newline 1,\u0026amp; \\text{if } x = 1\\newline F_{n-1} + F_{n-2},\u0026amp; \\text{if } x \\geq 2 \\newline \\end{cases} $$ A przykładem rekurencyjnej definicji struktury danych (typu) może być definicja listy jednokierunkowej:\nstruct node { int data; // some integer data struct node *next; // pointer to another struct node };  Dzięki rekurencji łatwo można w prosty sposób zdefiniować niektóre zbiory fraktalne, np. trójkąt Sierpińskiego:   Trójkąt Sierpińskiego   Wieże Hanoi Mamy trzy stosy. Na jednym w nich od najmniejszego do największego (patrząc z góry) ułożone jest $N$ krążków. Pozostałe 2 stosy są puste. Zadanie polega na przeniesieniu krążków na wybrany z dwóch pozostałych stosów tak żeby zachować kolejność. Zasady:\n jednocześnie przenosić można tylko jeden krążek, większy krążek nigdy nie może leżeć na mniejszym.  Można zajrzeć tutaj po dokładniejszy opis.\n  Wieże Hanoi   Wyzwanie 1. Spróbuj na kartce papieru rozwiązać zagadkę dla 3 krążków.\nPseudokod rozwiązania rekurencyjnego function move(n, source, target, buffer): if n == 0: return # move n - 1 disks from source to helping tower, so they are out of the way move(n - 1, source, buffer, target) # move the nth disk from source to target target.append(source.pop()) # move the n - 1 disks that we left on helping onto target move(n - 1, buffer, target, source)  Co należy zrobić?  Zaimplementuj rekurencyjną funkcję wiezeHanoi(N:int), która rozwiąże problem i jednocześnie na konsoli wyświetli jakąś wizualizację wykonanych ruchów. (Podpowiedź: Krążki reprezentuj przez liczby naturalne a stosy przez listy.) Czy potrafisz wyjaśnić dlaczego zaprezentowany algortym działa? Jak zależy ilość przestawień od liczby krążków?  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":-62135596800,"objectID":"2b6cb8592732102911491ad9d255269e","permalink":"https://www.rozanskit.com/pl/teaching/jsp2019/rekursja/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/pl/teaching/jsp2019/rekursja/","section":"teaching","summary":"Co to jest Rekurencja? Zacznijmy od żartu. Rekurencja (ang.recursion) występuje, gdy definicja typu czy funkcji odwołuje się sama do siebie. Przykładem rekurencyjnej definicji funkcji może być definicja ciągu Fibonacciego: $$ F_n = \\begin{cases} 1,\u0026amp; \\text{if } x = 0\\newline 1,\u0026amp; \\text{if } x = 1\\newline F_{n-1} + F_{n-2},\u0026amp; \\text{if } x \\geq 2 \\newline \\end{cases} $$ A przykładem rekurencyjnej definicji struktury danych (typu) może być definicja listy jednokierunkowej:","tags":null,"title":"Rekurencja (rekursja)","type":"teaching"},{"authors":null,"categories":null,"content":"Na czym polega sortowanie bąbelkowe? Wikipedia: \u0026ldquo;[Sortowanie bąbelkowe] Polega na porównywaniu dwóch kolejnych elementów i zamianie ich kolejności, jeżeli zaburza ona porządek, w jakim się sortuje tablicę. Sortowanie kończy się, gdy podczas kolejnego przejścia nie dokonano żadnej zmiany.\u0026rdquo;\nWizualizacja   Pseudokod procedure bubbleSort( A : lista elementów do posortowania ) n = liczba_elementów(A) do for (i = 0; i \u0026lt; n-1; i++) do: if A[i] \u0026gt; A[i+1] then swap(A[i], A[i+1]) end if end for n = n-1 # Dlaczego? while n \u0026gt; 1 end procedure  Co należy zaimplementować?  Zaimplementuj funkcję bubble_sort(), która jako argument przyjmuje listę a zwraca listę posortowaną. W funkcji main() wygeneruj losową listę liczb o długości N=1000. Posortuj tę listę wykorzystując bubble_sort(). Sprawdź czy lista zwrócona przez funkcję jest posortowana. Zmierz czas potrzebny na wykonanie sortowania N = {10, 100, 1000, 10000} liczb.  Pytania  Jak rośnie czas wykonania algorymtu wraz ze wzrostem długości danych N (liniowo, kwadratowo, logarytmicznie, \u0026hellip;)? Ile maksymalnie porównań może wykonać zaimplementowane sortowanie (w funkcji N)? Czy masz jakieś pomysły na usprawnienie sortowania bąbelkowego?  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":-62135596800,"objectID":"2ad99f7a7ccd0fdde4ad9eac30605c76","permalink":"https://www.rozanskit.com/pl/teaching/jsp2019/bubble_sort/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/pl/teaching/jsp2019/bubble_sort/","section":"teaching","summary":"Na czym polega sortowanie bąbelkowe? Wikipedia: \u0026ldquo;[Sortowanie bąbelkowe] Polega na porównywaniu dwóch kolejnych elementów i zamianie ich kolejności, jeżeli zaburza ona porządek, w jakim się sortuje tablicę. Sortowanie kończy się, gdy podczas kolejnego przejścia nie dokonano żadnej zmiany.","tags":null,"title":"Sortowanie bąbelkowe","type":"teaching"},{"authors":null,"categories":null,"content":"Na czym polega sortowanie przez scalanie? Algorytm sortowania przez scalanie (ang. merge sort) wykorzystuje metodę ,,dziel i zwyciężaj\u0026rsquo;\u0026rsquo; (ang. divide-and-conquer). Algorytmy tego typu wywołują same siebie (jeden lub więcej razy), tzn. mają strukturę rekurencyjną. Metoda ,,dziel i zwyciężaj\u0026rsquo;\u0026rsquo; polega na podzieleniu problemu na mniejsze podproblemy, rozwiązaniu ich a następnie połączeniu rozwiązań podproblemów w celu uzyskania rozwiązania początkowego, pełnego problemu.\nOgólny opis algorytmu sortowania przez scalanie jest następujący:\n Podziel $n$-elementowy ciąg na dwa podciągi po $n/2$ elementów każdy. Posortuj otrzymane podciągi, używając rekurencyjnie sortowania przez scalanie. Połącz posortowanie podciągi w jeden posortowany ciąg.  Rekursja kończy się gdy ciąg do posortowania ma długość równą 1 - ciąg o długości 1 zawsze jest posortowany.\nKluczowym elementem algorytmu jest procedura $\\text{MERGE}(A,p,q,r)$, gdzie $A$ to tablica, a $p,~q,~r$ są indeksami ($p\\le q\\le r$). Procedura zakłada, że podciągi $A[p..q]$ i $A[q..r]$ są posortowane. Po jej wywołaniu tablica $A[p..r]$ jest posortowana. (Opracowano na podstawie książki T. H. Cormen i in. ,,Wprowadzenie do algorytmów\u0026rsquo;\u0026rsquo;.)\n    Sortowanie przez scalanie   (Grafika pochodzi z artykułu w angielskojęzycznej Wikipedii)\nWizualizacja   Pseudokod procedure mergeSort( A, p, r) // posortuj tablicę A -\u0026gt; mergeSort(A, 0, length(A)-1) if p \u0026lt; r q = floor((p+r)/2) mergeSort(A, p, q) mergeSort(A, q+1, r) merge(A, p, q, r) endif procedure merge(A, p, q, r) n1 = q - p + 1 n2 = r - q L[0..n1] i R[0..n2] to puste tablice for i = 0 to n1 L[i] = A[p+i] for i = 0 to n2 R[j] = A[q+j+1] L[n1] = infinity L[n2] = infinity i = 0 j = 0 for k = p to r if L[i] \u0026lt;= R[j] A[k] = L[i] i++ else A[k] = R[j] j++ endif  Co należy zaimplementować?  Zaimplementuj funkcję merge_sort(), która jako argument przyjmuje listę a zwraca listę posortowaną. Porównaj czas sortowania list o długości 5, 10, 50, 100, 1000 elementów przy pomocy algorytmów mergeSort() i insertionSort().  Pytania  Jak rośnie czas wykonania algorymtu wraz ze wzrostem długości danych N (liniowo, kwadratowo, logarytmicznie, \u0026hellip;)? Czy algorytm sortowania przez scalanie jest zawsze szybszy od algorytmu sortowania przez wstawianie? Jak zbudować hybrydę algorytmów sortowania przez scalanie i sortowania przez wstawianie, która będzie szybsza od sortowania przez scalanie?  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":-62135596800,"objectID":"d53ea412d6e01e4efde92d4720b2bf55","permalink":"https://www.rozanskit.com/pl/teaching/jsp2019/merge_sort/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/pl/teaching/jsp2019/merge_sort/","section":"teaching","summary":"Na czym polega sortowanie przez scalanie? Algorytm sortowania przez scalanie (ang. merge sort) wykorzystuje metodę ,,dziel i zwyciężaj\u0026rsquo;\u0026rsquo; (ang. divide-and-conquer). Algorytmy tego typu wywołują same siebie (jeden lub więcej razy), tzn.","tags":null,"title":"Sortowanie przez scalanie","type":"teaching"},{"authors":null,"categories":null,"content":"Na czym polega sortowanie przez wstawianie? Na podstawie książki T. H. Cormen i in. ,,Wprowadzenie do algorytmów\u0026rsquo;': Sortowanie przez wstawianie jest efektywnym algorytmem sortowania dla niewielkiej liczby elementów. Algorytm ten działa w taki sposób, jaki ludzie często porządkują rozdane karty. Zaczynamy od ,,pustej\u0026rsquo;\u0026rsquo; lewej ręki i kupki kart zakrytych na stole. Następnie bierzemy ze stołu kolejno po jednej karcie i wstawiamy ją we właściwe miejsce wśród kart trzymanych w lewej ręce. Aby znaleźć włąściwe miejsce dla danej karty, porównujemy ją z kartami, które już mamy w ręce, przeglądając je od strony prawej do lewej. Przez cały czas karty trzymane w lewej ręce są posortowane, a kart na stole znajdują się w losowej kolejności.\nWizualizacja   Pseudokod procedure insertionSort( A : lista elementów do posortowania ) n = liczba_elementów(A) for (i = 1; i \u0026lt; n; i++) do key = A[i] //Wstaw A[j] w posortowany ciąg A[0:i] j = i - 1 while (j \u0026gt;= 0) and (A[j] \u0026gt; key) A[j+1] = A[j] j -= 1 A[i+1] = key  Co należy zaimplementować?  Zaimplementuj funkcję insert_sort(), która jako argument przyjmuje listę a zwraca listę posortowaną. W funkcji main() wygeneruj losową listę liczb o długości N=1000. Posortuj tę listę wykorzystując insert_sort(). Sprawdź czy lista zwrócona przez funkcję jest posortowana. Zmierz czas potrzebny na wykonanie sortowania N = {10, 100, 1000, 10000} liczb.  Pytania  Jak rośnie czas wykonania algorymtu wraz ze wzrostem długości danych N (liniowo, kwadratowo, logarytmicznie, \u0026hellip;)? Czy masz jakieś pomysły na usprawnienie sortowania przez wstawianie (zmniejszenie liczby porównań, zmiejszenie liczy przestawień)?  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":-62135596800,"objectID":"01cd6a27bac072db298601acff7331d4","permalink":"https://www.rozanskit.com/pl/teaching/jsp2019/insertion_sort/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/pl/teaching/jsp2019/insertion_sort/","section":"teaching","summary":"Na czym polega sortowanie przez wstawianie? Na podstawie książki T. H. Cormen i in. ,,Wprowadzenie do algorytmów\u0026rsquo;': Sortowanie przez wstawianie jest efektywnym algorytmem sortowania dla niewielkiej liczby elementów. Algorytm ten działa w taki sposób, jaki ludzie często porządkują rozdane karty.","tags":null,"title":"Sortowanie przez wstawianie","type":"teaching"},{"authors":null,"categories":null,"content":"Na czym polega sortowanie szybkie? Algorytm sortowania szybkiego (ang. quick sort), podobnie jak sortowanie przez scalanie, wykorzystuje metodę ,,dziel i zwyciężaj\u0026rsquo;\u0026rsquo; (ang. divide-and-conquer).\nOgólny opis algorytmu quicksort jest następujący:\n Wybierz element tablicy zwany z angielskiego pivot. Podziel tablicę na dwie części - zawierającym elementy większe i elementy mniejsze od pivota. Po tym kroku tablica sortowana powinna wyglądać następująco: [elementy\u0026lt;pivot, pivot, elementy\u0026gt;pivot]. Zastosuj tę strategię rekurencyjnie dla obydwu części.  Rekursja kończy się gdy ciąg do posortowania ma długość równą 1 - ciąg o długości 1 zawsze jest posortowany.\nKluczowym elementem algorytmu jest procedura partycjonowania (ang. partitioning). Istnieje kilka różnych strategii wykonywania podziału. Drugin ważnym elementem sortowania szybkiego jest metoda wyboru pivota. Typowo wykorzystuje się element ostatni, ale schemat jego wyboru jest dowolny. Optymalny pivot to taki który dzieli nam tablicę na dwie równe części.\n   Sortowanie szybkie   (Grafika pochodzi z artykułu w angielskojęzycznej Wikipedii)\nWizualizacja   Pseudokod algorithm quick_sort(A, lo, hi) is if lo \u0026lt; hi then p := partition(A, lo, hi) quicksort(A, lo, p) quicksort(A, p + 1, hi) algorithm partition(A, lo, hi) is \u0026quot;\u0026quot;\u0026quot; Hoare partitioning method (1959) \u0026quot;\u0026quot;\u0026quot; pivot := A[lo + (hi - lo) / 2] i := lo - 1 j := hi + 1 loop forever do i := i + 1 while A[i] \u0026lt; pivot do j := j - 1 while A[j] \u0026gt; pivot if i \u0026gt;= j then return j swap A[i] with A[j]  Aby posortować tablicę A należy wywołać zaimplementowaną funckję następująco: quick_sort(A, 0, len(A)-1).\nCo należy zaimplementować?  Zaimplementuj funkcję quick_sort(), która jako argument przyjmuje listę a zwraca listę posortowaną. Porównaj czas sortowania list o długości 5, 10, 50, 100, 1000 elementów przy pomocy algorytmów quick_sort() i merge_sort().  Pytania  Jak rośnie czas wykonania algorymtu wraz ze wzrostem długości danych N (liniowo, kwadratowo, logarytmicznie, \u0026hellip;)? Jaka jest największa słabość algorytmu sortowania szybkiego? Jakie znasz metody wyboru pivota? Która jest najlepsza? Czym jest zrandomizowany quicksort? Czy algorytm sortowania szybkiego jest zawsze szybszy od algorytmu sortowania przez scalanie? Dlaczego?  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":-62135596800,"objectID":"a09709593642abf041dd918d1ed03597","permalink":"https://www.rozanskit.com/pl/teaching/jsp2019/quick_sort/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/pl/teaching/jsp2019/quick_sort/","section":"teaching","summary":"Na czym polega sortowanie szybkie? Algorytm sortowania szybkiego (ang. quick sort), podobnie jak sortowanie przez scalanie, wykorzystuje metodę ,,dziel i zwyciężaj\u0026rsquo;\u0026rsquo; (ang. divide-and-conquer).\nOgólny opis algorytmu quicksort jest następujący:\n Wybierz element tablicy zwany z angielskiego pivot.","tags":null,"title":"Sortowanie szybkie","type":"teaching"},{"authors":null,"categories":null,"content":"Literatura Wszystkie informacje zamieszczone poniżej, pochodzą z doskonałego wprowadzenia do systemu kontroli wersji Git, które można znaleźć w książce: Pro Git (S. Chacon, B. Straub).\nCo to jest system kontroli wersji i dlaczego go potrzebujemy? Systemy kontroli wersji służą śledzeniu i zapamiętywaniu wszystkich zmian wprowadzanych w projekcie nad, którym pracujemy. Zmiany mogą dotyczyć zmian w kodzie źródłowym programu, ale nie tylko - mogą to być zmiany dowolnych plików (lub w plikach). Dzięki historii zmian możemy w dowolnym momencie przywrócić wcześniejszy stan projektu, czy sprawdzić kto jest autorem danego fragmentu kodu.\nPrawdziwa wartość systemów kontroli wersji jest widoczna w pracy grupowej, kiedy wielu programistów jednocześnie pracuje nad przydzielonymi im funkcjonalnościami oprogramowania. Wtedy uporządkowana praca pozwala na łatwe rozszerzanie możliwości programu i rozwiązywanie konfliktów, czyli problemów które mogą wystąpić podczas scalania zmian wykonanych przez dwóch programistów w tym samym pliku.\nQuick start  Utwórz katalog, który będzie twoim katalogiem projektu. Wejdź do nowo utworzonego katalogu i zainicjalizuj w nim  git init  \u0026hellip;\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":-62135596800,"objectID":"070197899b483ee39b54064f975a6d9f","permalink":"https://www.rozanskit.com/pl/teaching/jsp2019/git/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/pl/teaching/jsp2019/git/","section":"teaching","summary":"Literatura Wszystkie informacje zamieszczone poniżej, pochodzą z doskonałego wprowadzenia do systemu kontroli wersji Git, które można znaleźć w książce: Pro Git (S. Chacon, B. Straub).\nCo to jest system kontroli wersji i dlaczego go potrzebujemy?","tags":null,"title":"Wprowadzenie do systemu kontroli wersji - Git","type":"teaching"},{"authors":null,"categories":null,"content":" Opis makroskopowy pola promieniowania (natężenie, średnie natężenie, strumień promieniowania, gęstość pola promieniowania, ciśnienie promieniowania, opis fotonowy). Związek pomiędzy natężeniem promieniowania i strumieniem obserwowanym. Równanie przepływu promieniowania. Przybliżenie płasko-równoległe. Symetria sferyczna. Rozwiązanie formalne równania przepływu promieniowania. Równowaga termodynamiczna i koncepcja LTE (prawo Kirchoffa, ciało doskonale czarne, prawo Stefana-Boltzmanna). Przybliżenie dyfuzyjne równania przepływu promieniowania (własności promieniowania na dużych głębokościach). Empiryczny model Słońca, rola pociemnienia brzegowego. Równania opisujące strukturę atmosfery gwiazdowej. Atmosfera szara w równowadze promienistej. Atmosfery pasko-równoległe (przybliżenie Eddingtona). Atmosfery rozciągłe. Metoda iteracyjna Unsölda rozwiązania równania przepływu promieniowania. Średnia Rosselanda współczynnika absorpcji. Podać też definicje innych średnich współczynników absorpcji. Równania Boltzmanna, Saha, Maxwella. Równanie stanu. Model atmosfery Słońca z empirycznym rozkładem temperatury. Jak rozpraszanie promieniowania modyfikuje równania opisujące atmosferę. Model atmosfery z czystym rozpraszaniem. Ciśnienie promieniowania (opis dynamiczny, modyfikacja równania równowagi hydrostatycznej). Modelowanie atmosfer gwiazdowych. Kryterium Schwarzchilda dla konwekcji. Omówić czynniki sprzyjające konwekcji (jonizacja, ciśnienie promieniowania). Efektywność transportu energii przez konwekcję (teoria drogi mieszania, strumień konwektywny, siła wyporu). Modelowanie atmosfer konwektywnych. Współczynniki Einsteina i relacje między nimi. Równanie przepływu promieniowania dla procesów związany-związany. Modele atomów - kulombowskie oddziaływanie między jądrem a elektronem (opis stanów stacjonarnych, główna liczba kwantowa, degeneracja). Modele atomów - centralne oddziaływanie elektrostatyczne w atomie wieloelektronowym (konfiguracja elektronowa). Modele atomów - resztkowe (niecentralne) oddziaływanie elektronów (całki ruchu L i S, termy). Model atomów - reguły wyboru (stan podstawowy, metastabilny, przejścia dozwolone). Prawdopodobieństwa przejść związany-związany (Równanie Schrodingera dla wodoru, funkcje falowe, siła oscylatora). Równanie przepływu promieniowania dla przejść związany-wolny. Najważniejsze absorbery w widmie ciągłym (H I, He I, He II, H$^-$, H$_2^+$, metale). Formy energii molekuł. Widma rotacyjne, oscylacyjne i elektronowe molekuł. Rozpraszanie Thomsona i Rayleigh’a. Poszerzenie naturalne współczynnika absorpcji dla linii (gasnący oscylator harmoniczny - profil Lorentza, mechanika kwantowa). Poszerzenie dopplerowskie współczynnika absorpcji dla linii (profil Gaussa, mikroturbulencja, makroturbulencja). Poszerzenie zderzeniowe linii - teoria zderzeniowa (przejście z przebiegu czasowego na dziedzinę częstotliwości, statystyka zderzeń, n=3,4,6). Poszerzenie zderzeniowe linii - teoria statystyczna (przybliżenie najbliszego sąsiada). Efekt Starka dla linii wodorowych.  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"pl","lastmod":-62135596800,"objectID":"e91509caefa706e52250f2b2ca38697c","permalink":"https://www.rozanskit.com/pl/teaching/tag2019/wymagania_2017_2018/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/pl/teaching/tag2019/wymagania_2017_2018/","section":"teaching","summary":"Opis makroskopowy pola promieniowania (natężenie, średnie natężenie, strumień promieniowania, gęstość pola promieniowania, ciśnienie promieniowania, opis fotonowy). Związek pomiędzy natężeniem promieniowania i strumieniem obserwowanym. Równanie przepływu promieniowania. Przybliżenie płasko-równoległe. Symetria sferyczna.","tags":null,"title":"Zagadnienia egzaminacyjne 2017/18","type":"teaching"}]